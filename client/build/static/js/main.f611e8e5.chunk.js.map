{"version":3,"sources":["actions/itemActions.js","actions/types.js","components/DocumentsList/Document.js","components/NoFoundAlert.js","components/DocumentsList/DocumentsList.js","components/FilterForm.js","components/Header.js","components/Footer.js","App.js","serviceWorker.js","reducers/itemReducer.js","reducers/index.js","store.js","index.js"],"names":["setItemsLoading","type","Document","_this$props$document","this","props","document","name","desc","react_default","a","createElement","className","href","Component","NoFoundAlert","role","DocumentsList","itemsRenderMethod","toggle","filteredArr","length","map","DocumentsList_Document","key","_id","components_NoFoundAlert","getItems","items","item","_this$props$state","state","console","log","connect","dispatch","axios","get","then","res","payload","data","FilterForm","onSubmit","id","placeholder","autoComplete","pattern","required","onChange","Header","isOpen","_this","setState","Footer","App","e","preventDefault","arr","filter","toLowerCase","search","trim","_this$setState","Object","defineProperty","target","value","components_Header","components_FilterForm","components_DocumentsList_DocumentsList","components_Footer","Boolean","window","location","hostname","match","initialState","loading","combineReducers","arguments","undefined","action","objectSpread","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","devToolsExtension","actionsBlacklist","noop","ReactDOM","render","es","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f611e8e5.chunk.js","sourcesContent":["import axios from 'axios';\nimport { GET_ITEMS, ITEMS_LOADING } from './types';\n\nexport const getItems = () => dispatch => {\n    dispatch(setItemsLoading());\n    axios\n        .get('/api/items')\n        .then(res => \n            dispatch({\n                type: GET_ITEMS,\n                payload: res.data\n            })\n        )\n};\n\nexport const setItemsLoading = () => {\n    return {\n        type: ITEMS_LOADING\n    };\n};","export const GET_ITEMS = 'GET_ITEMS';\nexport const ITEMS_LOADING = 'ITEMS_LOADING';","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Document extends Component {\n    render() {\n        const { name, desc } = this.props.document\n        return (\n            <li className=\"list-group-item bg-light\">\n                <a href=\"#\">{name}</a>\n                <p>{desc}</p>\n            </li>\n        )\n    };\n};\n\nDocument.propTypes = {\n    document: PropTypes.object.isRequired\n};\n\nexport default Document;\n","import React, { Component } from 'react';\n\nclass NoFoundAlert extends Component {\n\n    render() {\n        return (\n            <li className=\"list-group-item bg-light\" role=\"alert\">\n                <h5 className=\"alert alert-dark text-center mb-0\">Enter correct <br/>document name</h5>\n            </li>\n        )\n    }\n};\n\nexport default NoFoundAlert;","import React, { Component } from 'react';\n\nimport { connect } from 'react-redux';\nimport { getItems } from '../../actions/itemActions';\nimport PropTypes from 'prop-types';\nimport Document from './Document';\nimport NoFoundAlert from '../NoFoundAlert';\n\nclass DocumentsList extends Component {\n\n    componentDidMount() {\n        this.props.getItems();\n    };\n\n    itemsRenderMethod = (toggle, filteredArr) => {\n        if(filteredArr.length > 0 && toggle) {\n            return (\n                filteredArr.map((document) => {\n                    if (toggle) {\n                        return (\n                            <Document document={document} key={document._id} />\n                        )\n                    }\n                })\n            )\n        }  else if(filteredArr.length <= 0 && toggle){\n            return <NoFoundAlert />\n        }\n    }\n\n    render() {\n        const { items } = this.props.item;\n        const { toggle, filteredArr} = this.props.state;\n        console.log(`DB: `, items)\n        return(\n            <div className=\"container mt-5\">\n                <div className=\"row\">\n                    <ul className=\"list-group w-100 pb-5\">\n                        {this.itemsRenderMethod(toggle, filteredArr)}\n                    </ul>\n                </div>\n          </div>\n        )\n    }\n};\n\nDocumentsList.propTypes = {\n    getItems: PropTypes.func.isRequired,\n    item: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n    item: state.item\n})\nexport default connect(mapStateToProps, { getItems })(DocumentsList);","import React,{ Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass FilterForm extends Component {\n    render() {\n        return (\n            <div className=\"container mt-5\">\n                <div className=\"row justify-content-center\">\n                    <nav className=\"navbar navbar-light p-0\">\n                        <form\n                            onSubmit={this.props.onSubmit}\n                            className=\"form-inline\"\n                        >\n                            <div className=\"form-group m-0\">\n                                <input\n                                    type=\"text\"\n                                    name=\"name\"\n                                    id=\"item\"\n                                    className=\"form-control\"\n                                    placeholder=\"Search...\"\n                                    autoComplete=\"off\"\n                                    pattern=\"^[a-zA-Z0-9_]{1,}(\\s+[a-zA-Z0-9_])*$\"\n                                    // [a-zA-Z0-9_]+(\\s[a-zA-Z0-9_])\n                                    required={true}\n                                    onChange={this.props.onChange} />\n                            </div>\n                            <button className=\"btn btn-dark ml-2\">Search</button>\n                        </form>\n                    </nav>\n                </div>\n            </div>\n        )\n    };\n};\n\nconst mapStateToProps = (state) => ({\n    item: state.item\n})\n\nexport default connect(mapStateToProps)(FilterForm);","import React,{Component } from 'react';\n\nclass Header extends Component {\n        state = {\n            isOpen: false\n        }\n\n    toggle = () => {\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    }\n\n    render() {\n        return (\n            <header>\n                <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                    <div className=\"container\">\n                        <a className=\"navbar-brand\" href=\"#\">Test</a>\n                    </div>\n                </nav>\n            </header>\n        )\n    }\n};\n\nexport default Header;","import React,{Component } from 'react';\n\nclass Footer extends Component {\n\n    render() {\n        return (\n            <footer className=\"pt-3 pb-3 mt-auto bg-light\">\n                <div className=\"bd-footer text-muted\">\n                    <div className=\"container\">\n                        <p>Footer</p>\n                    </div>\n                </div>\n            </footer>\n        )\n    }\n};\n\nexport default Footer;","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { connect } from 'react-redux';\nimport DocumentsList from './components/DocumentsList/DocumentsList';\nimport FilterForm from './components/FilterForm';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\nclass App extends Component {\n\n  state = {\n    name: '',\n    toggle: false,\n    filteredArr: []\n  }\n \n  toggle = () => {\n    this.setState({\n      toggle: !this.state.toggle\n    })\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    if ((this.state.name !== '' && !null) && !this.state.toggle) {\n      this.toggle();\n      let arr = [];\n      arr = this.props.item.items.filter(item => {\n        return item.name.toLowerCase().search(this.state.name.trim().toLowerCase()) !== -1\n      })\n      this.setState({ filteredArr: arr })\n    }\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value, toggle: false});\n  }\n\n\n  render(){\n    return (\n      <div className=\"App h-100 d-flex flex-column\">\n        <Header />\n        <FilterForm\n          onSubmit={this.onSubmit}\n          onChange={this.onChange}\n          toggle={this.toggle}\n        />\n        <DocumentsList state={this.state} />\n        <Footer />\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  item: state.item\n})\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { GET_ITEMS, ITEMS_LOADING } from '../actions/types';\n\nconst initialState = {\n    items: [],\n    loading: false\n};\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case GET_ITEMS:\n            return {\n                ...state,\n                items: action.payload,\n                loading: false\n            }\n        case ITEMS_LOADING:\n            return {\n                ...state,\n                loading: true\n            }\n        default:\n            return state;\n    };\n};","import { combineReducers } from 'redux';\nimport itemReducer from './itemReducer';\n\nexport default combineReducers({\n    item: itemReducer\n})","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\nconst middleware = [thunk];\n\nconst store = createStore(rootReducer, initialState,\n    compose(\n        applyMiddleware(...middleware),\n        window.devToolsExtension ? window.devToolsExtension({\n            name: 'MyApp', actionsBlacklist: ['REDUX_STORAGE_SAVE']\n        }) : noop => noop\n    )\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}